name: Performance Test Run
on:
  push:
    branches:
      - main
jobs:
  jmeter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-8-jdk
          sudo apt-get install -y jmeter
          sudo apt-get install -y python3 python3-pip
          sudo apt-get install -y chromium-browser
      - name: Install Taurus
        run: |
          if ! command -v bzt &> /dev/null; then
            pip3 install bzt
            echo "export PATH=$HOME/.local/bin:\$PATH" >> $GITHUB_ENV
          fi
      - name: Refresh environment variables
        run: |
          source $GITHUB_ENV
          sleep 30
      - name: Verify Taurus installation
        run: |
          bzt -h
        shell: bash
      - name: Run JMeter test using Taurus
        id: taurus
        run: |
          bzt jmeter/tests/performance/9MAYPROD-SF-NOcookAndClariity.jmx -report
      - name: Ensure execute permission for scripts
        run: chmod +x ./scripts/archive_reports.sh ./scripts/generate_reports.sh
      - name: Conditional Steps
        run: |
          if [[ "${{ steps.taurus.outputs.stdout }}" == *"bzt"* ]]; then
            taurus_output="${{ steps.taurus.outputs.stdout }}"
            if [ -n "$taurus_output" ]; then
              report_link=$(grep -oP 'https:\/\/a\.blazemeter\.com\/app\/\?public-token=\S+' <<< "$taurus_output")
              echo "::set-output name=report_link::$report_link"
              echo "# $(date '+%Y-%m-%d_%H-%M-%S') - $report_link" >> reports.txt
            else
              echo "No Taurus output found."
            fi
          else
            if [[ -x "./scripts/generate_reports.sh" ]]; then
              ./scripts/generate_reports.sh
            else
              echo "Generate reports script not found or does not have execute permission."
            fi
          fi
      - name: Set version
        env:
          VERSION: ${{ github.sha }}
        run: |
          echo "Version: $VERSION" > version.txt
      - name: Commit version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add version.txt
          git commit -m "Update version"
          git push origin main
