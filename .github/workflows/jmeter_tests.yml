name: Performance Test Run

on:
  push:
    branches:
      - main

jobs:
  jmeter:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install required tools
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk
        sudo apt-get install -y jmeter
        sudo apt-get install -y python3 python3-pip
        sudo apt-get install -y chromium-browser

    - name: Install Taurus
      run: |
        if ! command -v bzt &> /dev/null; then
          pip3 install bzt
          echo "export PATH=$HOME/.local/bin:\$PATH" >> $GITHUB_ENV
        fi

    - name: Refresh environment variables
      run: |
        source $GITHUB_ENV
        sleep 30

    - name: Verify Taurus installation
      run: |
        bzt -h
      shell: bash

    - name: Run JMeter test using Taurus
      id: taurus
      run: |
        bzt jmeter/tests/performance/9MAYPROD-SF-NOcookAndClariity.jmx -report | tee output.log

    - name: Export Report Link and Timestamp
      id: export-report-link
      run: |
        report_link=$(grep -oP 'https:\/\/a\.blazemeter\.com\/app\/\?public-token=\S+' output.log)
        timestamp=$(date '+%d_%m_%Y_%H_%M')
        echo "report_link=$report_link" >> $GITHUB_ENV
        echo "timestamp=$timestamp" >> $GITHUB_ENV

    - name: Conditional Steps
      if: ${{ env.report_link }}
      run: |
        report_link="${{ env.report_link }}"
        timestamp="${{ env.timestamp }}"
        formatted_timestamp=$(date -d "$timestamp" '+%d_%m_%Y_%H_%M')
        report_filename="report_${formatted_timestamp}.txt"
        echo "# $formatted_timestamp - $report_link" > $report_filename
        echo "# Report Link - ${formatted_timestamp}" > report_link_${formatted_timestamp}.md
        echo "The report is available here: [Report Link]($report_link)" >> report_link_${formatted_timestamp}.md
        sleep 5
        chmod +x ./scripts/archive_reports.sh
        ./scripts/archive_reports.sh
        chmod +x ./scripts/generate_reports.sh
        ./scripts/generate_reports.sh

    - name: Upload Report File as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: report-file
        path: report_${{ env.timestamp }}.txt

    - name: Create Summary with Report Link
      id: create-summary
      uses: actions/github-script@v6
      with:
        script: |
          const { report_link, timestamp } = process.env;
          const formatted_timestamp = new Date(timestamp).toISOString().replace(/[:T-]/g, '_').replace(/Z$/, '');
          const summaryContent = `# Report Summary\n\n[Click here to view the report](${report_link})`;
          
          // Output to be used in the GitHub Actions Summary
          console.log(summaryContent);
          
          // Add the summary content to the GitHub Actions summary
          const fs = require('fs');
          const path = require('path');
          const summaryPath = path.join(process.env.GITHUB_WORKSPACE, `report_link_${formatted_timestamp}.md`);
          fs.writeFileSync(summaryPath, summaryContent);

          return summaryContent;

    - name: Set version
      env:
        VERSION: ${{ github.sha }}
      run: |
        echo "Version: $VERSION" > version.txt

    - name: Commit version
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git remote set-url origin https://github.com/${{ github.repository }}
        git add version.txt
        git commit -m "Update version"
        git push origin main
