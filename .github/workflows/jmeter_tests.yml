name: Performance Test Run

jobs:
  jmeter:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install required tools
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk
        sudo apt-get install -y jmeter
        sudo apt-get install -y python3 python3-pip
        sudo apt-get install -y chromium-browser

    - name: Install Taurus
      run: |
        if ! command -v bzt &> /dev/null; then
          pip3 install bzt
          echo "export PATH=$HOME/.local/bin:\$PATH" >> $GITHUB_ENV
        fi

    - name: Refresh environment variables
      run: |
        source $GITHUB_ENV
        sleep 30

    - name: Verify Taurus installation
      run: |
        bzt -h
      shell: bash

    - name: Run JMeter test using Taurus
      id: taurus
      run: |
        bzt jmeter/tests/performance/9MAYPROD-SF-NOcookAndClariity.jmx -report | tee output.log

    - name: Export Report Link
      id: export-report-link
      run: |
        report_link=$(grep -oP 'https:\/\/a\.blazemeter\.com\/app\/\?public-token=\S+' output.log)
        echo "::set-output name=report_link::$report_link"
        echo $report_link > report_url.txt

    - name: Conditional Steps
      if: ${{ steps.export-report-link.outputs.report_link }}
      run: |
        report_link=$(cat report_url.txt)
        timestamp=$(date '+%Y-%m-%d_%H-%M-%S')
        echo "# $timestamp - $report_link" >> reports.txt
        echo "# Report Summary" > report_summary.md
        echo "The report is available here: [Report Link]($report_link)" >> report_summary.md
        sleep 5
        chmod +x ./scripts/archive_reports.sh
        sleep 5
        chmod +x ./scripts/generate_reports.sh
        sleep 5
        ./scripts/archive_reports.sh
        sleep 5
        ./scripts/generate_reports.sh

    - name: Upload Report URL as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: report-url
        path: report_url.txt

    - name: Upload Report Summary as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: report-summary
        path: report_summary.md

    - name: Create Summary with Report Link
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          const summaryPath = path.join(process.env.GITHUB_WORKSPACE, 'report_summary.md');
          if (fs.existsSync(summaryPath)) {
            const summaryContent = fs.readFileSync(summaryPath, 'utf8');
            const { data: checkRuns } = await octokit.rest.checks.listForRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: context.runId
            });
            const checkRunId = checkRuns.check_runs[0].id;
            await octokit.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: checkRunId,
              output: {
                title: 'Report Summary',
                summary: summaryContent
              }
            });
          }

    - name: Set version
      env:
        VERSION: ${{ github.sha }}
      run: |
        echo "Version: $VERSION" > version.txt

    - name: Commit version
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add version.txt
        git commit -m "Update version"
        git push origin main
